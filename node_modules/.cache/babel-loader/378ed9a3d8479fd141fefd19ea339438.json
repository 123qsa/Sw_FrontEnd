{"ast":null,"code":"import \"core-js/modules/es.json.stringify.js\";\nvar key = 'user';\nvar user = {\n  /* 定义 user 数据对象和它的初始值 */\n  state: function state() {\n    return {\n      user: null\n    };\n  },\n\n  /* 定义读取方法 getUser，从 localStorage 中读取 user 数据并转换成 JSON 格式 */\n  getters: {\n    getUser: function getUser(state) {\n      if (!state.user) {\n        state.user = JSON.parse(localStorage.getItem(key));\n      }\n\n      return state.user;\n    }\n  },\n\n  /* 定义更改 store 状态的事件 */\n  mutations: {\n    /* 存数据，将 JSON 格式的数据转化为字符串形式存储到以 localStorage 中以 `user` 为键的值中 */\n    $_setStorage: function $_setStorage(state, value) {\n      state.user = value;\n      localStorage.setItem(key, JSON.stringify(value));\n    },\n\n    /* 清空数据，将状态恢复初始值，并从 localStorage 中移除对象 */\n    $_removeStorage: function $_removeStorage(state) {\n      state.user = null;\n      localStorage.removeItem(key);\n    }\n  },\n\n  /* 定义调用 mutations 的方法，向上提供调用接口 */\n  actions: {\n    /* 调用 _setStorage 方法存储数据 */\n    saveUserInfo: function saveUserInfo(_ref, data) {\n      var commit = _ref.commit;\n      commit('$_setStorage', data);\n    },\n\n    /* 调用 _removeStorage 方法清空数据 */\n    clearUserInfo: function clearUserInfo(_ref2) {\n      var commit = _ref2.commit;\n      commit('$_removeStorage');\n    }\n  }\n};\nexport default user;","map":{"version":3,"names":["key","user","state","getters","getUser","JSON","parse","localStorage","getItem","mutations","$_setStorage","value","setItem","stringify","$_removeStorage","removeItem","actions","saveUserInfo","data","commit","clearUserInfo"],"sources":["D:/vue/project_test/src/store/user.js"],"sourcesContent":["const key = 'user'\r\nconst user = {\r\n    /* 定义 user 数据对象和它的初始值 */\r\n    state() {\r\n        return {\r\n            user: null\r\n        }\r\n    },\r\n    /* 定义读取方法 getUser，从 localStorage 中读取 user 数据并转换成 JSON 格式 */\r\n    getters: {\r\n        getUser: function(state) {\r\n            if (!state.user) {\r\n                state.user = JSON.parse(localStorage.getItem(key))\r\n            }\r\n            return state.user\r\n        }\r\n    },\r\n    /* 定义更改 store 状态的事件 */\r\n    mutations: {\r\n        /* 存数据，将 JSON 格式的数据转化为字符串形式存储到以 localStorage 中以 `user` 为键的值中 */\r\n        $_setStorage(state, value) {\r\n            state.user = value\r\n            localStorage.setItem(key, JSON.stringify(value))\r\n        },\r\n        /* 清空数据，将状态恢复初始值，并从 localStorage 中移除对象 */\r\n        $_removeStorage(state) {\r\n            state.user = null\r\n            localStorage.removeItem(key)\r\n        }\r\n    },\r\n    /* 定义调用 mutations 的方法，向上提供调用接口 */\r\n    actions: {\r\n        /* 调用 _setStorage 方法存储数据 */\r\n        saveUserInfo({ commit }, data) {\r\n            commit('$_setStorage', data)\r\n        },\r\n        /* 调用 _removeStorage 方法清空数据 */\r\n        clearUserInfo({ commit }) {\r\n            commit('$_removeStorage');\r\n        }\r\n    }\r\n};\r\n\r\nexport default user"],"mappings":";AAAA,IAAMA,GAAG,GAAG,MAAZ;AACA,IAAMC,IAAI,GAAG;EACT;EACAC,KAFS,mBAED;IACJ,OAAO;MACHD,IAAI,EAAE;IADH,CAAP;EAGH,CANQ;;EAOT;EACAE,OAAO,EAAE;IACLC,OAAO,EAAE,iBAASF,KAAT,EAAgB;MACrB,IAAI,CAACA,KAAK,CAACD,IAAX,EAAiB;QACbC,KAAK,CAACD,IAAN,GAAaI,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqBR,GAArB,CAAX,CAAb;MACH;;MACD,OAAOE,KAAK,CAACD,IAAb;IACH;EANI,CARA;;EAgBT;EACAQ,SAAS,EAAE;IACP;IACAC,YAFO,wBAEMR,KAFN,EAEaS,KAFb,EAEoB;MACvBT,KAAK,CAACD,IAAN,GAAaU,KAAb;MACAJ,YAAY,CAACK,OAAb,CAAqBZ,GAArB,EAA0BK,IAAI,CAACQ,SAAL,CAAeF,KAAf,CAA1B;IACH,CALM;;IAMP;IACAG,eAPO,2BAOSZ,KAPT,EAOgB;MACnBA,KAAK,CAACD,IAAN,GAAa,IAAb;MACAM,YAAY,CAACQ,UAAb,CAAwBf,GAAxB;IACH;EAVM,CAjBF;;EA6BT;EACAgB,OAAO,EAAE;IACL;IACAC,YAFK,8BAEoBC,IAFpB,EAE0B;MAAA,IAAhBC,MAAgB,QAAhBA,MAAgB;MAC3BA,MAAM,CAAC,cAAD,EAAiBD,IAAjB,CAAN;IACH,CAJI;;IAKL;IACAE,aANK,gCAMqB;MAAA,IAAVD,MAAU,SAAVA,MAAU;MACtBA,MAAM,CAAC,iBAAD,CAAN;IACH;EARI;AA9BA,CAAb;AA0CA,eAAelB,IAAf"},"metadata":{},"sourceType":"module"}